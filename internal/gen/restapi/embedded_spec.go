// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/slawekzachcial.tournament.v1+json"
  ],
  "produces": [
    "application/slawekzachcial.tournament.v1+json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Tournament",
    "version": "1.0.0"
  },
  "paths": {
    "/games": {
      "post": {
        "security": [
          {
            "key": []
          }
        ],
        "operationId": "play",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/game"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/stats": {
      "get": {
        "operationId": "getAllStats",
        "responses": {
          "200": {
            "description": "List all teams statistics",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/stats"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/stats/{team}": {
      "get": {
        "operationId": "getTeamStats",
        "parameters": [
          {
            "type": "string",
            "name": "team",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get team stats",
            "schema": {
              "$ref": "#/definitions/stats"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "game": {
      "type": "object",
      "required": [
        "teamA",
        "scoreA",
        "teamB",
        "scoreB"
      ],
      "properties": {
        "scoreA": {
          "type": "integer"
        },
        "scoreB": {
          "type": "integer"
        },
        "teamA": {
          "type": "string",
          "minLength": 1
        },
        "teamB": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "principal": {
      "type": "string"
    },
    "stats": {
      "type": "object",
      "required": [
        "team",
        "played",
        "won",
        "drawn",
        "lost",
        "points"
      ],
      "properties": {
        "drawn": {
          "type": "integer"
        },
        "lost": {
          "type": "integer"
        },
        "played": {
          "type": "integer"
        },
        "points": {
          "type": "integer"
        },
        "team": {
          "type": "string",
          "minLength": 1
        },
        "won": {
          "type": "integer"
        }
      }
    }
  },
  "securityDefinitions": {
    "key": {
      "type": "apiKey",
      "name": "x-token",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/slawekzachcial.tournament.v1+json"
  ],
  "produces": [
    "application/slawekzachcial.tournament.v1+json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Tournament",
    "version": "1.0.0"
  },
  "paths": {
    "/games": {
      "post": {
        "security": [
          {
            "key": []
          }
        ],
        "operationId": "play",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/game"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/stats": {
      "get": {
        "operationId": "getAllStats",
        "responses": {
          "200": {
            "description": "List all teams statistics",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/stats"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/stats/{team}": {
      "get": {
        "operationId": "getTeamStats",
        "parameters": [
          {
            "type": "string",
            "name": "team",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get team stats",
            "schema": {
              "$ref": "#/definitions/stats"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "game": {
      "type": "object",
      "required": [
        "teamA",
        "scoreA",
        "teamB",
        "scoreB"
      ],
      "properties": {
        "scoreA": {
          "type": "integer"
        },
        "scoreB": {
          "type": "integer"
        },
        "teamA": {
          "type": "string",
          "minLength": 1
        },
        "teamB": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "principal": {
      "type": "string"
    },
    "stats": {
      "type": "object",
      "required": [
        "team",
        "played",
        "won",
        "drawn",
        "lost",
        "points"
      ],
      "properties": {
        "drawn": {
          "type": "integer"
        },
        "lost": {
          "type": "integer"
        },
        "played": {
          "type": "integer"
        },
        "points": {
          "type": "integer"
        },
        "team": {
          "type": "string",
          "minLength": 1
        },
        "won": {
          "type": "integer"
        }
      }
    }
  },
  "securityDefinitions": {
    "key": {
      "type": "apiKey",
      "name": "x-token",
      "in": "header"
    }
  }
}`))
}
